name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: sh tools/setup.sh
      - name: Lint Codebase
        run: sh tools/lint.sh
      - name: Build Wheel
        run: sh tools/build.sh
      - name: Test Wheel
        env:
          GCS_CREDENTIALS: ${{ secrets.GCS_CREDENTIALS }}
          PATHY_S3_ACCESS_ID: ${{ secrets.PATHY_S3_ACCESS_ID }}
          PATHY_S3_ACCESS_SECRET: ${{ secrets.PATHY_S3_ACCESS_SECRET }}
        run: rm -rf ./pathy/ && sh tools/test_package.sh
      - name: Report Code Coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: sh tools/codecov.sh

  deploy:
    runs-on: ubuntu-latest
    needs: "build"
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "12"
      - name: Deploy
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sh tools/deploy.sh
        
  armv64_job:
    name: Build and Test for arm64
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false      
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install and test bottleneck
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt update && \
              apt install -y python3.8 && \
              apt install -y python3-pip && \
              python3.8 -m pip install --upgrade pip setuptools wheel && \
              sh tools/setup.sh && \
              sh tools/lint.sh && \
              sh tools/build.sh && \
              rm -rf ./pathy/ && sh tools/test_package.sh && \
              deactivate'
